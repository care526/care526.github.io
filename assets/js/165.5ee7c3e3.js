(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{632:function(n,t,s){"use strict";s.r(t);var a=s(32),e=Object(a.a)({},(function(){var n=this,t=n.$createElement,s=n._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[n._v("#")]),n._v(" 运算符")]),n._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#!/usr/local/bin/python3")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# -*- coding: UTF-8 -*-")]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 算数运算符")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# +  -  *  /  %  **(幂)  //(向下取商的整数部分)")]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 比较运算符")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ==  !=  >  >=  <  <=")]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 赋值运算符")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# =  +=  -=  *=  /=  %=  **=  //=")]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 位运算符")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# &  ｜  ^  ~  <<  >>")]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 逻辑运算符")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# and  or  not")]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 成员运算符")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# in  not in")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# if (a in list):")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# if (a not in list):")]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 身份运算符: 判断两个对象是否引用同一块内存地址")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# is  is not")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# if (a is b):")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# if (a is not b):")]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 运算符的优先级")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# **")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ～ + -")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# * / % //")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# + -")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# >> <<")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# &")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ^ |")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# <= < > >=")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# == !=")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# = %= /= //= -= += *= **=")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# is is not")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# in not in")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# not and or")]),n._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);