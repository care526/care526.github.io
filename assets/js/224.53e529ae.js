(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{693:function(t,a,r){"use strict";r.r(a);var s=r(32),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"栈-stack"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#栈-stack"}},[t._v("#")]),t._v(" 栈(Stack)")]),t._v(" "),r("h2",{attrs:{id:"概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),r("p",[t._v("先进后出")]),t._v(" "),r("ul",[r("li",[t._v("栈底"),r("br"),t._v("\n最早进入的元 素存放的位置")]),t._v(" "),r("li",[t._v("栈顶"),r("br"),t._v("\n最后进入的元素存放的位置")]),t._v(" "),r("li",[t._v("入栈"),r("br"),t._v("\n把新元素放入栈中")]),t._v(" "),r("li",[t._v("出栈"),r("br"),t._v("\n把元素从栈中弹出，只有栈顶元素才允许出栈，出栈元素 的前一个元素将会成为新的栈顶")])]),t._v(" "),r("h2",{attrs:{id:"应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[t._v("#")]),t._v(" 应用")]),t._v(" "),r("p",[t._v("用于对于历史的回溯、面包屑")])])}),[],!1,null,null,null);a.default=v.exports}}]);