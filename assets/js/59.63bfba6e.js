(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{523:function(e,t,r){"use strict";r.r(t);var s=r(32),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"net"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#net"}},[e._v("#")]),e._v(" net")]),e._v(" "),r("h2",{attrs:{id:"引入模块"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#引入模块"}},[e._v("#")]),e._v(" 引入模块")]),e._v(" "),r("p",[r("code",[e._v("const net = require('net');")])]),e._v(" "),r("h2",{attrs:{id:"net-server"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#net-server"}},[e._v("#")]),e._v(" net.Server")]),e._v(" "),r("p",[e._v("close connection error listening")]),e._v(" "),r("ul",[r("li",[r("h3",{attrs:{id:"server-address"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#server-address"}},[e._v("#")]),e._v(" server.address()")]),e._v("\n返回ip地址")]),e._v(" "),r("li",[e._v("server.close([callback])\n停止server服务。是异步的，当还有连接存在时，所有的连接关闭时，才会关闭服务")]),e._v(" "),r("li",[e._v("server.getConnections((err, count) => {})\n异步获取服务器的当前的并发数")]),e._v(" "),r("li",[e._v("server.listen()")]),e._v(" "),r("li",[e._v("server.listening\n是一个bool值，表示server是否正在监听")]),e._v(" "),r("li",[e._v("server.maxConnections\n设置该属性使当连接数过多时拒接连接")])]),e._v(" "),r("h2",{attrs:{id:"net-socket"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#net-socket"}},[e._v("#")]),e._v(" net.Socket")])])}),[],!1,null,null,null);t.default=n.exports}}]);