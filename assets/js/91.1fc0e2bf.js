(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{557:function(t,s,n){"use strict";n.r(s);var a=n(32),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"nginx"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" nginx")]),t._v(" "),n("h2",{attrs:{id:"介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),n("p",[t._v("高性能的http和反向代理服务器")]),t._v(" "),n("h2",{attrs:{id:"安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),n("p",[n("code",[t._v("sudo apt-get install nginx")])]),t._v(" "),n("h2",{attrs:{id:"命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[t._v("#")]),t._v(" 命令")]),t._v(" "),n("ul",[n("li",[t._v("nginx -v"),n("br"),t._v("\n查看版本")]),t._v(" "),n("li",[t._v("nginx -V\n查看版本和安装编译时的选项")]),t._v(" "),n("li",[t._v("nginx -t"),n("br"),t._v("\n测试配置文件格式是否正确，显示配置文件的位置")]),t._v(" "),n("li",[t._v("nginx"),n("br"),t._v("\n启动")]),t._v(" "),n("li",[t._v("nginx -s reload"),n("br"),t._v("\n重新加载配置文件")]),t._v(" "),n("li",[t._v("nginx -s reopen"),n("br"),t._v("\n重启")]),t._v(" "),n("li",[t._v("nginx -s stop"),n("br"),t._v("\n停止")])]),t._v(" "),n("h2",{attrs:{id:"目录文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#目录文件"}},[t._v("#")]),t._v(" 目录文件")]),t._v(" "),n("ol",[n("li",[t._v("文件\n"),n("ul",[n("li",[t._v("nginx.conf"),n("br"),t._v("\n配置文件")])])]),t._v(" "),n("li",[t._v("目录\n"),n("ul",[n("li",[t._v("conf.d\n子server文件目录")])])])]),t._v(" "),n("h2",{attrs:{id:"原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),n("h2",{attrs:{id:"nginx-conf文件结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-conf文件结构"}},[t._v("#")]),t._v(" nginx.conf文件结构")]),t._v(" "),n("ul",[n("li",[t._v("main\n"),n("ul",[n("li",[t._v("events")]),t._v(" "),n("li",[t._v("http\n"),n("ul",[n("li",[t._v("upstream")]),t._v(" "),n("li",[t._v("server\n"),n("ul",[n("li",[t._v("location")])])])])])])])]),t._v(" "),n("h2",{attrs:{id:"详细配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#详细配置"}},[t._v("#")]),t._v(" 详细配置")]),t._v(" "),n("div",{staticClass:"language-nginx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-nginx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用的用户和组")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v("                            www www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定工作衍生进程数")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每个Nginx进程平均耗费10M~12M内存")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一般和cpu核心数保持一致")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v("                "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pid /var/run/nginx.pid;  # 指定 pid 存放的路径")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_log")]),t._v("                       logs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log debug"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("events")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每个进程的最大连接数，默认是1024")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进程的最大连接数受Linux系统进程的最大打开文件数限制")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ulimit -n 65536  设置最大打开数")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_connections")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 采用的事件模型 [ kqueue | rtsig | epoll | /dev/poll | select | poll ]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# select和poll都是标准的工作模式")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kqueue(BSD)和epoll(Linux)是高效的工作模式")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v("                         epoll"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求体的类型")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v("                     mime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("types")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设定默认类型为二进制流(当文件类型未定义时)")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v(" application"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("octet"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("stream"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定每个 TCP 连接最多可以保持多长时间，默认是75s，设置为0代表关闭该设置")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不断的创建销毁tcp连接、长时间的保持tcp连接  都是消耗资源的，所以需要平衡")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keepalive_timeout")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定客户端与服务端建立连接后发送 request body 的超时时间")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 客户端在指定时间内没有发送任何内容，Nginx 返回 HTTP 408（Request Timed Out）")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("client_body_timeout")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 客户端向服务端发送一个完整的 request header 的超时时间")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 客户端在指定时间内没有发送一个完整的 request header，Nginx 返回 HTTP 408（Request Timed Out）")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("client_header_timeout")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 服务端向客户端传输数据的超时时间")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("send_timeout")]),t._v("                "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启gzip压缩")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip")]),t._v("                        on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 允许压缩的页面最小字节数，页面字节数从header头的Content-Length中获取")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认值是0，建议设置成大于1K的字节数，小于1K可能会越压越大")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_min_length")]),t._v("             "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 申请4个单位为16K的内存作为压缩结果流缓存")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认值是申请与原始数据大小相同的内存空间来存储gzip压缩结果")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_buffers")]),t._v("                "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 识别HTTP协议版本，默认是1.1")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_http_version")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定GZIP压缩比")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1 压缩比最小，处理速度最快；9 压缩比最大，传输速度快，但处理最慢，也比较消耗cpu资源")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_comp_level")]),t._v("             "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定压缩的类型，无论是否指定，“text/html”类型总是会被压缩的")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_types")]),t._v("                  text"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("plain application"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("javascript text"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("css application"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xml"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 让前端的缓存服务器缓存经过GZIP压缩的页面")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_vary")]),t._v("                   on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 负载均衡")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认轮询 每一个请求按时间顺序逐一分配到不同的后端服务器 缺点：可靠性低和负载分配不均衡")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("upstream")]),t._v(" linuxidc "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".6")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".108")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7080")]),t._v(" weight"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".85")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8980")]),t._v(" weight"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ip_hash ( 访问ip )")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每一个请求按访问ip的hash结果分配。这样每一个访客固定访问一个后端服务器，能够解决session的问题")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("upstream")]),t._v(" favresin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ip_hash")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".11")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 按后端服务器的响应时间来分配请求。响应时间短的优先分配")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("upstream")]),t._v(" favresin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("      \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(" down "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".11")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    fair"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# down 表示单前的server临时不參与负载.")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# weight 默觉得1.weight越大，负载的权重就越大。")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# max_fails 同意请求失败的次数默觉得1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误.")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fail_timeout max_fails次失败后。暂停的时间。")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# backup 其他全部的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 虚拟主机开始")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 服务端口")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("                  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# IP地址或者域名(多个之间用空格分开)")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("             localhost "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".8")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".18")]),t._v(" care"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问的默认首页地址")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("                   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("htm "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("php"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 虚拟主机的网页根目录")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("                    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("wwwroot"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cszhi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 网页的默认编码格式")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("charset")]),t._v("                 gb2312"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 虚拟主机的访问日志存放路径")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 路径后面的main是输入格式(在上面定义的)")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("access_log")]),t._v("              logs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ixdba"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("net"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("access"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配优先级")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 精确匹配  >  前缀匹配  >  正则匹配  > 正常匹配  > 全匹配")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 正则匹配成功之后停止匹配，非正则匹配成功还会接着匹配")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在所有匹配成功的url中，选取匹配度最大的url字符地址")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 精确匹配  ( = )")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("demo "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 前缀匹配  ( ^~ )")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("demo "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 正则匹配  ( ~ )")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("emo "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 正常匹配")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("demo "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全匹配")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 网页根目录")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("                    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("web"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("wwwroot"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cszhi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问的默认首页地址")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("                   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("htm "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 缓存时间                ")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("expires")]),t._v("                 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      \n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代理到8080端口")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v("              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 参与反向代理 http:// + upstream名称")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v("              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("linuxidc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 错误")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/wangbin_0729/article/details/82109693",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("反向代理\n代理服务器就是正向代理")]),t._v(" "),n("p",[t._v("负载均衡\nupstream myserve {\nip_hash;\nserver 192.168.0.1:8000 weight=5;\nserver 192.168.0.1:8001;\nfair;\n}")]),t._v(" "),n("ul",[n("li",[t._v("轮训 自动剔除宕机的")]),t._v(" "),n("li",[t._v("权重")]),t._v(" "),n("li",[t._v("hash")]),t._v(" "),n("li",[t._v("响应时间")])]),t._v(" "),n("p",[t._v("动静分离")]),t._v(" "),n("p",[t._v("高可用\n开启多台nginx服务器\n用守护进程的方式，来设置如果主nginx挂掉了，将对外的ip映射到副nginx上")]),t._v(" "),n("p",[t._v("配置文件")]),t._v(" "),n("ul",[n("li",[t._v("全局")]),t._v(" "),n("li",[t._v("event")]),t._v(" "),n("li",[t._v("http\n"),n("ul",[n("li",[t._v("全局快")]),t._v(" "),n("li",[t._v("server块\n"),n("ul",[n("li",[t._v("全局")]),t._v(" "),n("li",[t._v("localtion")])])])])])]),t._v(" "),n("p",[t._v("localtion的匹配的正则表达式")]),t._v(" "),n("p",[t._v("集群的配置")]),t._v(" "),n("p",[t._v("为服务器上的某个文件夹开启静态资源服务器服务\nlocation / {\nroot   /Users/morika/Desktop/projects/senguo-merchantcenter-frontend/;\nindex  index.html index.htm;\n}")])])}),[],!1,null,null,null);s.default=e.exports}}]);