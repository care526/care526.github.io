(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{625:function(t,s,a){"use strict";a.r(s);var r=a(32),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"项目结构、流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目结构、流程"}},[t._v("#")]),t._v(" 项目结构、流程")]),t._v(" "),a("h2",{attrs:{id:"参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),a("p",[t._v("参数校验\n根据参数的格式获取对应的参数")]),t._v(" "),a("h2",{attrs:{id:"权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#权限"}},[t._v("#")]),t._v(" 权限")]),t._v(" "),a("p",[t._v("权限数据存在数据库，需要鉴权的接口，根据用户的ID，访问数据库获取权限数据对比，看是否可以访问对应的接口")]),t._v(" "),a("h2",{attrs:{id:"中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中间件"}},[t._v("#")]),t._v(" 中间件")]),t._v(" "),a("p",[t._v("request body 解析中间件\n日志中间件：访问消息，错误消息，日志保留时间\n路由中间件 -> 分配业务处理单元\n消息队列中间件 -> 解决大量请求并发的情况")]),t._v(" "),a("h2",{attrs:{id:"restful-jsonrpc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#restful-jsonrpc"}},[t._v("#")]),t._v(" RESTFUL ｜ jsonRPC")]),t._v(" "),a("ul",[a("li",[t._v("RESTFUL\n根据请求的动作分为 get post put delete 等")]),t._v(" "),a("li",[t._v("jsonRPC\n全部都为post\n根据请求的动作设置 action=xxx\n每个action下对应若干个methods，为业务处理单元")])]),t._v(" "),a("h2",{attrs:{id:"错误处理方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误处理方式"}},[t._v("#")]),t._v(" 错误处理方式")]),t._v(" "),a("h2",{attrs:{id:"守护进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#守护进程"}},[t._v("#")]),t._v(" 守护进程")]),t._v(" "),a("ul",[a("li",[t._v("linux方式\n定时脚本，每隔1分钟(适合的时间间隔)，检查服务pid的信号值，异常关闭，使用脚本重启")]),t._v(" "),a("li",[t._v("第三方软件\n如nodejs的pm2，本质是linux一眼的\n还可以监听child_process的exit事件，重启服务")])])])}),[],!1,null,null,null);s.default=e.exports}}]);