(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{611:function(t,r,a){"use strict";a.r(r);var e=a(32),s=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[t._v("#")]),t._v(" 网络")]),t._v(" "),a("h3",{attrs:{id:"列出所有网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列出所有网络"}},[t._v("#")]),t._v(" 列出所有网络")]),t._v(" "),a("p",[t._v("docker network ls")]),t._v(" "),a("h3",{attrs:{id:"删除网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除网络"}},[t._v("#")]),t._v(" 删除网络")]),t._v(" "),a("p",[t._v("docker network rm")]),t._v(" "),a("h3",{attrs:{id:"查看网络详情"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看网络详情"}},[t._v("#")]),t._v(" 查看网络详情")]),t._v(" "),a("p",[t._v("docker network inspect"),a("br"),t._v("\ndocker inspect")]),t._v(" "),a("h3",{attrs:{id:"删除所有无用网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除所有无用网络"}},[t._v("#")]),t._v(" 删除所有无用网络")]),t._v(" "),a("p",[t._v("docker network prune")]),t._v(" "),a("h3",{attrs:{id:"创建新网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建新网络"}},[t._v("#")]),t._v(" 创建新网络")]),t._v(" "),a("p",[t._v("docker network create")]),t._v(" "),a("h3",{attrs:{id:"将容器连上网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将容器连上网络"}},[t._v("#")]),t._v(" 将容器连上网络")]),t._v(" "),a("p",[t._v("docker network connect")]),t._v(" "),a("h3",{attrs:{id:"将容器从指定网络上断开"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将容器从指定网络上断开"}},[t._v("#")]),t._v(" 将容器从指定网络上断开")]),t._v(" "),a("p",[t._v("docker network connect")])])}),[],!1,null,null,null);r.default=s.exports}}]);