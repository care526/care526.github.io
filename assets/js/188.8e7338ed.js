(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{655:function(n,E,r){"use strict";r.r(E);var e=r(32),a=Object(e.a)({},(function(){var n=this,E=n.$createElement,r=n._self._c||E;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("h1",{attrs:{id:"mysql4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mysql4"}},[n._v("#")]),n._v(" mysql4")]),n._v(" "),r("p",[n._v("sql对于大小写不敏感(建议大写)")]),n._v(" "),r("p",[n._v("每条语句后面的分号建议加上")]),n._v(" "),r("p",[n._v("SELECT\nSELECT - 从数据库表中获取数据\nSELECT 语句用于从表中选取数据。\nSELECT 列名称 FROM 表名称\nSELECT LastName,FirstName FROM Persons   // 中间用逗号分割\nSELECT * FROM 表名称   // *是选取所有")]),n._v(" "),r("p",[n._v("DISTINCT  仅仅展示不同的项,相同的项会合并\nSELECT DISTINCT Company FROM Orders")]),n._v(" "),r("p",[n._v("WHERE  指定挑选的条件\n等于|不等于  = <>\n大于|小于  > <\n大于等于|小于等于  >= <=\n在某个范围内  BETWEEN\n搜索某种模式  LIKE\nSELECT * FROM Persons WHERE City='Beijing'  // 建议使用单引号")]),n._v(" "),r("p",[n._v("AND|OR  多个查询条件  并且|或者的意思\nSELECT * FROM Persons WHERE FirstName='Thomas' AND LastName='Carter'\nSELECT * FROM Persons WHERE firstname='Thomas' OR lastname='Carter'")]),n._v(" "),r("p",[n._v("ORDER BY  将查询的结果排序\n如果排序的是字符串,默认是正序  ASC\nSELECT Company, OrderNumber FROM Orders ORDER BY Company\n逆字母排序  DESC\nSELECT Company, OrderNumber FROM Orders ORDER BY Company DESC\n同时有多个排序条件,字母和数字,都是正序的\nSELECT Company, OrderNumber FROM Orders ORDER BY Company, OrderNumber\n字母逆序,数字正序\nSELECT Company, OrderNumber FROM Orders ORDER BY Company DESC, OrderNumber ASC")]),n._v(" "),r("p",[n._v("INSERT INTO - 向数据库表中插入数据\nINSERT INTO 表名称 VALUES (值1, 值2,....)  // 向表中插入值\nINSERT INTO table_name (列1, 列2,...) VALUES (值1, 值2,....)  // 向表中指定位置插入值")]),n._v(" "),r("p",[n._v("UPDATE - 更新数据库表中的数据\nUPDATE 表名称 SET 列名称 = 新值 WHERE 列名称 = 某值\nUPDATE Person SET Address = 'Zhongshan 23', City = 'Nanjing' WHERE LastName = 'Wilson'  // 更新多个值")]),n._v(" "),r("p",[n._v("DELETE - 从数据库表中删除数据\nDELETE FROM Person WHERE LastName = 'Wilson'   // 删除指定行\nDELETE * FROM table_name  // 删除表的所有行")]),n._v(" "),r("p",[n._v("CREATE DATABASE my_db;  //创建新数据库")]),n._v(" "),r("p",[n._v("CREATE TABLE Persons   // 创建表并指定列及其类型\n(\nId_P int,\nLastName varchar(255),\nFirstName varchar(255),\nAddress varchar(255),\nCity varchar(255)\n);\nps:相关的数据类型\ninteger(size)  // 以下四个类型是整数,size规定了整数位的最大长度\nint(size)\nsmallint(size)\ntinyint(size)\ndecimal(size,d)  // 小数,size为整数位的最大长度,d为小数位的最大长度\nnumeric(size,d)\nchar(size)  // 固定长度的字符串(字符,数字,特殊字符),size为字符串的最大长度\nvarchar(size)  // 变长度的字符串(字符,数字,特殊字符),size为字符串的最大长度\ndate(yyyymmdd)  // 日期")]),n._v(" "),r("p",[n._v("指定表中添加数据的约束条件(可以在创建表的时候指定,也可以在表创建后用ALTER TABLE指定)\nNOT NULL  // 表示该表不接受NULL(空值),如果没有该值,则添加不成功\nUNIQUE  // 指定唯一标识,指定的该行,所有的值都要是唯一的(可以写在以下例子中的两个位置都可以),一个表可以有多行有该标识标记\nPRIMARY KEY  // 指定表的主键,一个表只能有一个主键,主键中的数据也是唯一标识\n一个表中的 FOREIGN KEY 指向另一个表中的 PRIMARY KEY\nCREATE TABLE Persons\n(\nId_P int NOT NULL UNIQUE PRIMARY KEY,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAddress varchar(255),\nCity varchar(255)\nUNIQUE (Id_P) PRIMARY KEY (Id_P) FOREIGN KEY (Id_P)\n)")]),n._v(" "),r("p",[n._v("CHECK  约束")]),n._v(" "),r("p",[n._v("DEFAULT  默认值\nCity varchar(255) DEFAULT 'Sandnes'")]),n._v(" "),r("p",[n._v("ALTER DATABASE - 修改数据库\nALTER TABLE - 变更（改变）数据库表\nDROP TABLE - 删除表\nCREATE INDEX - 创建索引（搜索键）\nDROP INDEX - 删除索引")])])}),[],!1,null,null,null);E.default=a.exports}}]);