(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{517:function(e,t,s){"use strict";s.r(t);var n=s(32),i=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"异步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步"}},[e._v("#")]),e._v(" 异步")]),e._v(" "),s("p",[e._v("node中提供了四种异步的方式，都是代码执行完成后，执行异步的代码")]),e._v(" "),s("ul",[s("li",[e._v("setTimeout()  采用的是类似IO观察者")]),e._v(" "),s("li",[e._v("setInterval()  采用的是类似IO观察者")]),e._v(" "),s("li",[e._v("setImmediate()  采用的是check观察者")]),e._v(" "),s("li",[e._v("process.nextTick()  采用的是idle观察者\n三种观察者的优先级顺序是：idle观察者>>io观察者>check观察者")])]),e._v(" "),s("p",[e._v("process.nextTick()，效率最高，消费资源小，但会阻塞CPU的后续调用；\nsetTimeout()，精确度不高，可能有延迟执行的情况发生，且因为动用了红黑树，所以消耗资源大；\nsetImmediate()，消耗的资源小，也不会造成阻塞，但效率也是最低的。")])])}),[],!1,null,null,null);t.default=i.exports}}]);